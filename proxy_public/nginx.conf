
#user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    resolver 127.0.0.11  valid=30s;   # Docker's DNS server

    include upstream.conf;

    ssl_certificate      fullchain.pem;
    ssl_certificate_key  privkey.pem;
#        ssl_prefer_server_ciphers  on;
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
#        grpc_ssl_certificate cert.pem;
#        grpc_ssl_certificate_key cert.key;
#        grpc_ssl_server_name off;

    ########################
    # RPC

    # 1. Osmosis
    server {
        listen 443 ssl http2;
        server_name rpc.osmosis.notional.ventures;
        location / {
            proxy_pass http://rpc_osmosis/$1$is_args$args;
        }
    }

    # 2. Starname
    server {
        listen 443 ssl http2;
        server_name rpc.starname.notional.ventures;
        location / {
            proxy_pass http://rpc_starname/$1$is_args$args;
        }
    }

    # 3. Regen
    server {
        listen 443 ssl http2;
        server_name rpc.regen.notional.ventures;
        location / {
            proxy_pass http://rpc_regen/$1$is_args$args;
        }
    }

    ########################
    # REST/API

    # 1. Osmosis
    server {
        listen 443 ssl http2;
        server_name api.osmosis.notional.ventures;
        location / {
            proxy_pass http://api_osmosis/$1$is_args$args;
        }
    }

    # 2. Starname
    server {
        listen 443 ssl http2;
        server_name api.starname.notional.ventures;
        location / {
            proxy_pass http://api_starname/$1$is_args$args;
        }
    }

    # 3. Regen
    server {
        listen 443 ssl http2;
        server_name api.regen.notional.ventures;
        location / {
            proxy_pass http://api_regen/$1$is_args$args;
        }
    }

    ########################
    # gRPC

    # 1. Osmosis
    server {
        listen 443 ssl http2;
        server_name grpc.osmosis.notional.ventures;
        location / {
            proxy_pass http://grpc_osmosis/$1$is_args$args;
        }
    }

    # 2. Starname
    server {
        listen 443 ssl http2;
        server_name grpc.starname.notional.ventures;
        location / {
            proxy_pass http://grpc_starname/$1$is_args$args;
        }
    }

    # 3. Regen
    server {
        listen 443 ssl http2;
        server_name grpc.regen.notional.ventures;
        location / {
            proxy_pass http://grpc_regen/$1$is_args$args;
        }
    }

    ########################
    # Websocket

    # 1. Osmosis
    server {
        listen 443 ssl http2;
        server_name ws.osmosis.notional.ventures;
        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass http://rpc_osmosis/websocket;
        }
    }

    # 2. Starname
    server {
        listen 443 ssl http2;
        server_name ws.starname.notional.ventures;
        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass http://rpc_starname/websocket;
        }
    }

    # 3. Regen
    server {
        listen 443 ssl http2;
        server_name ws.regen.notional.ventures;
        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass http://rpc_regen/websocket;
        }
    }

}
